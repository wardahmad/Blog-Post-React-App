{"version":3,"sources":["Comment.js","Author.js","MainBlog.js","index.js"],"names":["Comment","this","props","body","Component","Author","authorArr","Post","state","e","setState","prompt","target","value","allComments","comments","allAuthors","author","title","onClick","changeBody","onChange","onchangeBody","post","ReactDOM","render","document","getElementById"],"mappings":"uOAYeA,G,uLARX,OACE,6BACE,2BAAIC,KAAKC,MAAMC,W,GAJDC,cCUPC,E,iLARX,OACE,6BACE,2BAAIJ,KAAKC,MAAMI,gB,GAJFF,aC2DNG,E,YApDb,WAAaL,GAAQ,IAAD,8BAClB,+CACKM,MAAQ,CACZL,KAAMD,EAAMM,OAHK,E,wEAOVC,GACTR,KAAKS,SAAS,CACZP,KAAMQ,OAAO,W,mCAIJF,GACXR,KAAKS,SAAS,CACZP,KAAMM,EAAEG,OAAOC,U,+BAIP,IAAD,OACFC,EAAa,CACjB,kBAAC,EAAD,CAASX,KAAMF,KAAKC,MAAMa,SAAS,KACnC,kBAAC,EAAD,CAASZ,KAAMF,KAAKC,MAAMa,SAAS,KACnC,kBAAC,EAAD,CAASZ,KAAMF,KAAKC,MAAMa,SAAS,MAG/BC,EAAW,CACf,kBAAC,EAAD,CAAQV,UAAWL,KAAKC,MAAMe,OAAO,KACrC,kBAAC,EAAD,CAAQX,UAAWL,KAAKC,MAAMe,OAAO,KACrC,kBAAC,EAAD,CAAQX,UAAWL,KAAKC,MAAMe,OAAO,MAIvC,OACE,6BACE,4BAAKhB,KAAKC,MAAMgB,OAChB,mCAASF,GAGT,2BAAIf,KAAKO,MAAML,MACf,4BAAQgB,QAAS,SAACV,GAAD,OAAO,EAAKW,WAAWX,KAAxC,UACA,2BAAOY,SAAU,SAACZ,GAAD,OAAO,EAAKa,aAAab,MAG1C,wCACCK,O,GA/CUV,aCEbmB,EAAO,CACTL,MAAO,wBACPD,OAAQ,CAAC,uBAAuB,QAAS,mBACzCd,KAAM,gCACNY,SAAU,CAAC,SAAU,aAAc,0BAGvCS,IAASC,OAAO,kBAAC,EAAD,CACZP,MAAOK,EAAKL,MACZD,OAAQM,EAAKN,OACbd,KAAMoB,EAAKpB,KACXY,SAAUQ,EAAKR,WAAaW,SAASC,eAAe,U","file":"static/js/main.23e52e34.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Comment extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <p>{this.props.body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;","import React, {Component} from 'react';\r\n\r\nclass Author extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <p>{this.props.authorArr}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Author;","import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\n// Load in Comment component\r\nimport Comment from './Comment.js';\r\nimport Author from './Author.js';\r\n// define our Hello component\r\nclass Post extends Component {\r\n\r\n  constructor (props) {\r\n    super()\r\n    this.state = {\r\n     body: props.state// initialize this.state.moodPoints to be 1\r\n   };\r\n }\r\n\r\n changeBody(e){\r\n   this.setState({\r\n     body: prompt(\"add\")\r\n   })\r\n }\r\n\r\n onchangeBody(e){\r\n   this.setState({\r\n     body: e.target.value\r\n   })\r\n }\r\n\r\n  render () {\r\n    const allComments =[\r\n      <Comment body={this.props.comments[0]}/>,\r\n      <Comment body={this.props.comments[1]}/>,\r\n      <Comment body={this.props.comments[2]}/>\r\n    ]\r\n\r\n    const allAuthors=[\r\n      <Author authorArr={this.props.author[0]}/>,\r\n      <Author authorArr={this.props.author[1]}/>,\r\n      <Author authorArr={this.props.author[2]}/>\r\n    ]\r\n\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.props.title}</h1>\r\n        <p>By : {allAuthors}</p>\r\n\r\n\r\n        <p>{this.state.body}</p>\r\n        <button onClick={(e) => this.changeBody(e)}>change</button>\r\n        <input onChange={(e) => this.onchangeBody(e)}></input>\r\n\r\n\r\n        <h3>Commnts:</h3>\r\n        {allComments}\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Post;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Post from './App';\n//import * as serviceWorker from './serviceWorker';\n\n////////\nimport Post from './MainBlog';\n\nconst post = {\n    title: \"Dinosaurs are awesome\",\n    author: [\"Stealthy Stegosaurus\",\"T-Rex\", \"Ivory Iguanodon\"],\n    body: \"Check out this body property!\",\n    comments: [\"First!\", \"Great post\", \"Hire this author now!\"]\n}\n\nReactDOM.render(<Post \n    title={post.title}\n    author={post.author}\n    body={post.body}\n    comments={post.comments}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}